{"version":3,"sources":["HomoDeus/Quote/index.js","Util/IDgenerator.js","HomoDeus/Nav/index.js","HomoDeus/index.js","App.js","serviceWorker.js","index.js"],"names":["Quote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","quote","selected","mainLang","keys","quoteText","content","localText","local","concat","p","r","react_default","a","createElement","className","Component","generateID","text","uuidv5","NavList","children","NavItem","_Component","apply","arguments","inherits","createClass","key","value","item","title","href","sub","Nav_NavList","map","subItem","index","HomoDeus","Nav_NavItem","id","Quote_Quote","en","App","HomoDeus_HomoDeus","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75766b61.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nexport default class Quote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let { quote, mainLang } = this.props;\n    let selected = quote[mainLang];\n    if (!selected) {\n      selected = quote[Object.keys(quote)[0]];\n    }\n\n    let quoteText = selected.content;\n    let localText = ``;\n    if (selected.local) {\n      localText += `- ${selected.local.p}쪽`;\n      if (selected.local.r) localText += ` ${selected.local.r}줄`;\n    }\n    // let quoteText = `But the single greatest constant of history is that everything changes.`;\n    // let localText = `- ${100}쪽 ${23}줄`;\n\n    return (\n      <div className=\"Quote\">\n        <blockquote className=\"Item__quote\">{quoteText}</blockquote>\n        <div className=\"Item__localRow\">\n          <p className=\"Item__local\">{localText}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import uuidv5 from \"uuid/v5\";\nexport default function generateID(text) {\n  if (text) {\n    const namespace = \"5ff73aab-891b-4420-ada0-e27b771fc0b1\";\n    const id = uuidv5(text, namespace);\n    return id;\n  } else {\n    return \"\";\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nimport generateID from \"../../Util/IDgenerator\";\n\nexport const NavList = props => {\n  return <ul className=\"NavList\">{props.children}</ul>;\n};\n\nexport class NavItem extends Component {\n  render() {\n    let { item } = this.props;\n    return (\n      <li className=\"NavItem\">\n        {item.title && (\n          <a className=\"NavItem__a\" href={`#${generateID(item.title)}`}>\n            {item.title}\n          </a>\n        )}\n        {item.sub && (\n          <NavList>\n            {item.sub.map((subItem, index) => {\n              return <NavItem item={subItem} key={index} />;\n            })}\n          </NavList>\n        )}\n      </li>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nimport Quote from \"./Quote\";\nimport { NavList, NavItem } from \"./Nav\";\nimport generateID from \"../Util/IDgenerator\";\n\nexport default class HomoDeus extends Component {\n  state = {\n    mainLang: \"en\"\n  };\n\n  render() {\n    let { mainLang } = this.state;\n\n    let navArray = [\n      {\n        title: \"HomoDeus\",\n        sub: [\n          {\n            title: null,\n            sub: [\n              {\n                title: \"Ch1. The New Human Agenda\",\n                sub: [{ title: \"A Gun in Act 1\" }]\n              }\n            ]\n          },\n          {\n            title: \"PART 1\",\n            sub: [\n              {\n                title: \"Ch3. The Human Spark\",\n                sub: [{ title: \"Dreamtime\" }]\n              }\n            ]\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div className=\"Page--HomoDeus\">\n        <div className=\"Page__inner\">\n          <section className=\"section section--nav\">\n            <nav className=\"Nav\">\n              <NavList>\n                {navArray.map((item, index) => {\n                  return <NavItem key={index} item={item} />;\n                })}\n              </NavList>\n            </nav>\n          </section>\n          <section className=\"section section--main\">\n            <div className=\"Main\">\n              <h1 className=\"Main__h1\" id={generateID(\"HomoDeus\")}>\n                HomoDeus\n              </h1>\n              <h3\n                className=\"Main__h3\"\n                id={generateID(\"Ch1. The New Human Agenda\")}\n              >\n                Ch1. The New Human Agenda\n              </h3>\n              <h4 className=\"Main__h4\" id={generateID(\"A Gun in Act 1\")}>\n                A Gun in Act 1\n              </h4>\n              <Quote\n                quote={{\n                  en: {\n                    content: `History has witnessed the rise and fall of many religions, empires, and cultures. Such upheavals are not necessarily bad.`,\n                    local: { p: 77, r: 31 }\n                  }\n                }}\n                mainLang={mainLang}\n              />\n              <Quote\n                quote={{\n                  en: {\n                    content: `Looking back, many think that the downfall of the pharaohs and the death of God were both positive developments. Maybe the collapse of humanism will also be beneficial. People are usually afraid of change because they fear the unknown. But the single greatest constant of history is that everything changes.`,\n                    local: { p: 78, r: 15 }\n                  }\n                }}\n                mainLang={mainLang}\n              />\n              <h3 className=\"Main__h3\" id={generateID(\"Ch3. The Human Spark\")}>\n                Ch3. The Human Spark\n              </h3>\n              <h4 className=\"Main__h4\" id={generateID(\"Dreamtime\")}>\n                Dreamtime\n              </h4>\n              <Quote\n                quote={{\n                  en: {\n                    content: `Sapiens rule the world because only they can weave an intersubjective web of meaning.`,\n                    local: { p: 175, r: 14 }\n                  }\n                }}\n                mainLang={mainLang}\n              />\n              <h3\n                className=\"Main__h3\"\n                id={generateID(\"Ch6. The Modern Covenant\")}\n              >\n                Ch6. The Modern Covenant\n              </h3>\n              <h4 className=\"Main__h4\" id={generateID(\"The Ark Syndrome\")}>\n                The Ark Syndrome\n              </h4>\n              <Quote\n                quote={{\n                  en: {\n                    content: `There is no justice in history. When disaster strikes, the poor almost always suffer far more than the rich, even if the rich caused the tragedy in the first place. ... Paradoxically, the very power of science may increase the danger, because it makes the rich complacent.`,\n                    local: { p: 251, r: 9 }\n                  }\n                }}\n                mainLang={mainLang}\n              />\n              <h2>Not yet located</h2>\n              <h4 className=\"Main__h4\" id={generateID(\"Upgrading Inequality\")}>\n                Upgrading Inequality\n              </h4>\n              <Quote\n                quote={{\n                  en: {\n                    content: `The same logic operates on election day, when the vote of the poor peasant counts for exactly the same as the billionaire's. The liberal solution for social inequality is to give equal value to different human experiences, instead of trying to create the same experiences for everyone. However, will this solution still work once rich and poor are separated not merely by wealth, but also by real biological gaps?`,\n                    local: { p: 404, r: 17 }\n                  }\n                }}\n                mainLang={mainLang}\n              />\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport HomoDeus from \"./HomoDeus\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomoDeus />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}